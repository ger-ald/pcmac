OBJ = masm.o stable.o utilits.o error.o init.o file.o pass.o getline.o libmak.o libget.o vars.o express.o generate.o primitiv.o tfunc.o objmad.o
INC = include.h defines.h functype.h types.h vars.h tfunc.h
G= -g
LIB=
masm 			: 			 $(OBJ)
	cc $(G) $(OBJ) -o masm $(LIB)
masm.o 			: masm.c 	 $(INC)
	cc $(G) -c masm.c $(LIB)
stable.o 		: stable.c 	 $(INC)
	cc $(G) -c stable.c $(LIB)
utilits.o 		: utilits.c  $(INC)
	cc $(G) -c utilits.c $(LIB)
error.o 		: error.c 	 $(INC)
	cc $(G) -c error.c $(LIB)
init.o 			: init.c 	 $(INC)
	cc $(G) -c init.c $(LIB)
file.o 			: file.c 	 $(INC)
	cc $(G) -c file.c $(LIB)
pass.o 			: pass.c 	 $(INC)
	cc $(G) -c pass.c $(LIB)
getline.o 		: getline.c  $(INC)
	cc $(G) -c getline.c $(LIB)
libmak.o 		: libmak.c 	 $(INC)
	cc $(G) -c libmak.c $(LIB)
libget.o 		: libget.c 	 $(INC)
	cc $(G) -c libget.c $(LIB)
vars.o 			: vars.c 	 $(INC)
	cc $(G) -c vars.c $(LIB)
express.o 		: express.c  $(INC)
	cc $(G) -c express.c $(LIB)
generate.o 		: generate.c $(INC)
	cc $(G) -c generate.c $(LIB)
primitiv.o 		: primitiv.c $(INC)
	cc $(G) -c primitiv.c $(LIB)
tfunc.o 		: tfunc.c 	 $(INC)
	cc $(G) -c tfunc.c $(LIB)
objmad.o		: objmad.c	 $(INC)
	cc $(G) -c objmad.c $(LIB)
